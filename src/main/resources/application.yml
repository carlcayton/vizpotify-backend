spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        default_schema: public
        dialect: org.hibernate.dialect.PostgreSQLDialect
    jdbc:
      batch_size: 20
      fetch_size: 20
    show-sql: false
    open-in-view: false
  cache:
    type: redis
  jmx:
    enabled: true
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
  lambda:
    base-url: ${LAMBDA_BASE_URL}

logging:
  level:
    org:
      hibernate:
        SQL: WARN
        type: WARN
        orm:
          sql:
            exec: WARN
            results: WARN
            loading: WARN
          results:
            loading: WARN
    springframework: WARN
    springframework.boot.autoconfigure: WARN
    jdbc:
      sqltiming: WARN
      resultsettable: WARN

spotify:
  clientId: ${SPOTIFY_CLIENT_ID}
  clientSecret: ${SPOTIFY_CLIENT_SECRET}
  redirectUri: ${SPOTIFY_REDIRECT_URI}
  scopes:
    - user-read-private
    - user-read-email
    - user-follow-read
    - playlist-read-collaborative
    - user-library-read
    - user-top-read
    - user-read-playback-state
    - user-read-recently-played

jwt:
  secretKey: ${JWT_SECRET_KEY}
  validityInMs: 36000000

frontendUrl: ${FRONTEND_URL}

server:
  port: 8081

cloud:
  function:
    definition: VizpotifyAnalyticsFunction

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html